{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red42\green42\blue42;}
{\*\expandedcolortbl;;\cssrgb\c21569\c21569\c21569;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{hyphen\}}{\leveltext\leveltemplateid2\'01\uc0\u8259 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\sa320\partightenfactor0
\ls1\ilvl0
\f0\fs34 \cf2 1. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What is the purpose of a breakpoint?\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sl400\sa320\partightenfactor0
\ls1\ilvl1\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	
\f1 \uc0\u8259 
\f0 	}to pause execution to enable evaluation of variables / expressions / code at the breakpoint\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl400\sa320\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 2. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Does the line of code on a breakpoint run when you start debugging?\
		- not prior to the breakpoint being hit\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 3. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 How do we debug the next line of code?\
		- step over\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 4. \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What does the step into command do?\
		- steps into a function that\'92s called from the line of code\
5. What is the difference between evaluate expression and evaluate code fragment?\
		- evaluate expression enables one line to be executed while evaluate code fragment enables multiple lines to be executed\
}